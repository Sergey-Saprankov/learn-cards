{"version":3,"file":"static/js/114.8c1ae3ef.chunk.js","mappings":"yLACA,EAA4B,4BAA5B,EAAkE,0BAAlE,EAA2G,+BAA3G,EAA4J,kCAA5J,EAAiN,mCCAjN,GAAgB,aAAe,kCAAkC,IAAM,0B,qCCY1DA,GAAmCC,EAAAA,EAAAA,OAAK,SAAAC,GAA6B,IAA1BC,EAAKD,EAALC,MAAOC,EAAWF,EAAXE,YACvDC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,aAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,MAAQC,SAAEP,KACzBQ,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAPa,WACvBR,GAASS,EAAAA,EAAAA,IAAe,YAC1B,EAKuCN,UAAWC,EAAAA,IAAMC,SACjDN,MAIT,I,wCC3BA,EAA4B,+BAA5B,EAAmE,2BAAnE,EAA6G,kCAA7G,EAAqJ,yBAArJ,EAAuL,4B,mBCU1KW,EAAc,WACzB,IAAMC,GAASC,EAAAA,EAAAA,IAAeC,EAAAA,IACxBC,GAAUF,EAAAA,EAAAA,IAAeG,EAAAA,IACzBC,GAAYJ,EAAAA,EAAAA,IAAeK,EAAAA,IAG3BjB,IAFNkB,EAAAA,EAAAA,GAAoBF,EAAS,GAAb,IAECf,EAAAA,EAAAA,QAEjBkB,EAAAA,EAAAA,YAAU,WACRC,EAAUN,EAAU,KAAO,MAC7B,GAAG,CAACA,IAEJ,IAAAO,GAA4BC,EAAAA,EAAAA,UAAwBR,EAAU,KAAO,OAAMS,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAApEG,EAAMD,EAAA,GAAEH,EAASG,EAAA,GAcxB,OACErB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAQC,SAAC,sBACxBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,QAjBqB,WAC3BY,EAAU,MAEVpB,GAASyB,EAAAA,EAAAA,IAAgB,CAAEC,QAASf,EAAQgB,KAAM,EAAGC,IAAK,EAAGC,IAAK,IACpE,EAcQ1B,UAAsB,OAAXqB,EAAe,GAAAM,OAAM1B,EAAK,KAAA0B,OAAI1B,GAAaA,EAAMC,SAC7D,QAGDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,QAjBoB,WAC1BY,EAAU,OAEVpB,GAASyB,EAAAA,EAAAA,IAAgB,CAAEC,aAASK,EAAWJ,KAAM,EAAGC,IAAK,EAAGC,IAAK,IACvE,EAcQ1B,UAAsB,QAAXqB,EAAgB,GAAAM,OAAM1B,EAAK,KAAA0B,OAAI1B,GAAaA,EAAMC,SAC9D,aAMT,E,oBCvDA,EAA4B,yBAA5B,EAA6D,qBAA7D,EAAmG,8BAAnG,EAAkJ,8BAAlJ,EAAwL,qBAAxL,EAA2N,2BCS9M2B,EAAQ,WACnB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXgC,GAASrB,EAAAA,EAAAA,IAAesB,EAAAA,IACtBC,EAA2CF,EAA3CE,cAAeC,EAA4BH,EAA5BG,cAAeR,EAAaK,EAAbL,IAAKC,EAAQI,EAARJ,IAE3CR,GAA0BC,EAAAA,EAAAA,UAAmB,CAACM,EAAKC,IAAKN,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjDgB,EAAKd,EAAA,GAAEe,EAAQf,EAAA,IAEtBJ,EAAAA,EAAAA,YAAU,WACRmB,EAAS,CAACH,EAAeC,GAC3B,GAAG,CAACD,EAAeC,IAwCnB,OACElC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAQC,SAAC,qBACxBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAcC,SAAC,UAChCC,EAAAA,EAAAA,KAAA,SACEiC,SA7Ca,SAACC,GACtB,IAAMC,EAA8BC,OAAOF,EAAEG,cAAcN,OAE3DC,EAAS,CAACG,EAAUJ,EAAM,IAC5B,EA0CUO,UAxCyB,SAACJ,GAClC,GAAc,UAAVA,EAAEK,IAAiB,CACrB,IAAMJ,EAA8BC,OAAOF,EAAEG,cAAcN,OAE3DC,EAAS,CAACG,EAAUJ,EAAM,KAC1BrC,GAASyB,EAAAA,EAAAA,KAAeqB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIb,GAAM,IAAEL,IAAKa,KAC7C,CACF,EAkCUJ,MAAOA,EAAM,GACblC,UAAWC,QAGfE,EAAAA,EAAAA,KAACyC,EAAAA,GAAM,CACLC,GAAI,CAAEC,MAAO,QAASC,MAAO,WAE7BC,aAAc,iBAAM,mBAAmB,EACvCd,MAAOA,EACPE,SA1Ba,SAACa,EAAqCX,GACzDH,EAASG,EACX,EAyBQb,IAAKO,EACLN,IAAKO,EACLiB,kBAAkB,OAClBC,kBA1BsB,WAC5BtD,GAASyB,EAAAA,EAAAA,KAAeqB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIb,GAAM,IAAEL,IAAKS,EAAM,GAAIR,IAAKQ,EAAM,MAClE,GAiBaD,EAAgB,GAAKD,IAS5BjC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAcC,SAAC,UAChCC,EAAAA,EAAAA,KAAA,SACEiC,SAlDa,SAACC,GACtB,IAAMC,EAA8BC,OAAOF,EAAEG,cAAcN,OAE3DC,EAAS,CAACD,EAAM,GAAII,GACtB,EA+CUJ,MAAOA,EAAM,GACblC,UAAWC,EACXwC,UA/CyB,SAACJ,GAClC,GAAc,UAAVA,EAAEK,IAAiB,CACrB,IAAMJ,EAA8BC,OAAOF,EAAEG,cAAcN,OAE3DC,EAAS,CAACD,EAAM,GAAII,IACpBzC,GAASyB,EAAAA,EAAAA,KAAeqB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIb,GAAM,IAAEJ,IAAKY,KAC7C,CACF,YA8CF,EC9FA,EAA4B,6BAA5B,EAAiE,yBAAjE,EAAiG,wBAAjG,EAAoI,4BC8CpI,IACA,EAAe,IAA0B,iEC9B5Bc,EAAY,WACvB,IAAMvD,GAAWC,EAAAA,EAAAA,MACXU,GAASC,EAAAA,EAAAA,IAAeG,EAAAA,IACxByC,GAAW5C,EAAAA,EAAAA,IAAe6C,EAAAA,IAC1B9B,GAAOf,EAAAA,EAAAA,IAAe8C,EAAAA,IACtB9B,GAAMhB,EAAAA,EAAAA,IAAe+C,EAAAA,IACrB9B,GAAMjB,EAAAA,EAAAA,IAAegD,EAAAA,IACrBC,GAAYjD,EAAAA,EAAAA,IAAekD,EAAAA,IAC3BC,GAAWnD,EAAAA,EAAAA,IAAeoD,EAAAA,IAkBhC,OACE9D,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAQC,SAAC,gBACxBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAOC,UACrBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAY6D,IAAKC,EAAMC,IAAI,aAAa3D,QArB9C,WAEZgD,EAASY,OAAS,GACT,IAATzC,GACQ,IAARC,GACQ,IAARC,GACc,KAAdgC,GACa,KAAbE,GAEA/D,GAASqE,EAAAA,EAAAA,OACTrE,GAASsE,EAAAA,EAAAA,OACTtE,GAASyB,EAAAA,EAAAA,IAAgB,CAAEC,QAASf,MAEpCX,GAASuE,EAAAA,EAAAA,IAAY,uBAEzB,QAUF,ECnDA,EAA4B,wBCOfC,EAAO,WAClB,OACEtE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAACI,EAAW,KACZJ,EAAAA,EAAAA,KAAC0B,EAAK,KACN1B,EAAAA,EAAAA,KAACiD,EAAS,MAGhB,E,8BCfA,EAAuB,wBAAvB,EAAoD,sBAApD,EAAkF,yBAAlF,EAAgH,sBAAhH,EAAuJ,kCAAvJ,EAAwM,gCAAxM,GAA6O,sBAA7O,GAAmR,iCAAnR,GAAoY,6B,qDCApY,GAAyB,0BCSZkB,IAAqC7E,EAAAA,EAAAA,OAAK,SAAAC,GAAgC,IAA7B6E,EAAM7E,EAAN6E,OAAclE,GAAFX,EAAJ8E,KAAa9E,EAAPW,SACtE,OACEN,EAAAA,EAAAA,MAAA,OACEC,UAAYuE,EAAoB,GAAXtE,GACrBI,QAASA,EACTyC,MAAM,KACN2B,OAAO,KACPC,QAAQ,YACRF,KAAK,OACLG,MAAM,6BAA4BzE,SAAA,EAElCC,EAAAA,EAAAA,KAAA,QACEyE,EAAE,yQACFL,OAAQA,GAAkB,OAC1BM,cAAc,QACdC,eAAe,WAEjB3E,EAAAA,EAAAA,KAAA,QACEyE,EAAE,iNACFL,OAAQA,GAAkB,OAC1BM,cAAc,QACdC,eAAe,WAEjB3E,EAAAA,EAAAA,KAAA,QACEyE,EAAE,gBACFL,OAAQA,GAAkB,OAC1BM,cAAc,QACdC,eAAe,YAIvB,I,2ECbaC,IAAiCtF,EAAAA,EAAAA,OAAK,SAAAC,GAAgB,IAAbsF,EAAKtF,EAALsF,MAC9CnF,GAAWC,EAAAA,GAAAA,KACXmF,GAAYxE,EAAAA,GAAAA,GAAeyE,GAAAA,IAC3B1E,GAASC,EAAAA,GAAAA,GAAeC,EAAAA,IACxByE,GAAWC,EAAAA,EAAAA,MACXC,GAAS5E,EAAAA,GAAAA,GAAe6E,GAAAA,IACxBC,EAAoB,SAAXF,EACTG,GAAWC,EAAAA,EAAAA,IAAYR,EAAW,KAExC/D,GAAoBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAzBwE,EAAEtE,EAAA,GAAEuE,EAAKvE,EAAA,GAChBwE,GAAwBzE,EAAAA,EAAAA,UAAS,IAAG0E,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkC7E,EAAAA,EAAAA,UAAS,IAAG8E,GAAAlF,EAAAA,EAAAA,GAAAiF,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAQ9B,OANAjF,EAAAA,EAAAA,YAAU,WACR2E,EAAM,IACNI,EAAQ,IACRI,EAAa,GACf,GAAG,CAACX,KAGFzF,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAlG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAOC,SACjB,OAAL8E,QAAK,IAALA,OAAK,EAALA,EAAOqB,KAAI,SAAAC,GACV,IAAMC,GAAaC,EAAAA,GAAAA,GAAYF,EAAEG,SAC3BC,GAAWC,EAAAA,GAAAA,GAAgBL,EAAEM,UAAW,IACxCjH,GAAQgH,EAAAA,GAAAA,GAAgBL,EAAER,KAAM,IAChCe,EAAMP,EAAEJ,UAAYI,EAAEJ,UAAYY,GA0BlCC,EAA4B,IAAjBT,EAAEU,WAAmB,UAAY,GAC5CC,EAAYF,GAChB5G,EAAAA,EAAAA,KAACmE,GAAS,CAACC,OAAQwC,KAEnB5G,EAAAA,EAAAA,KAACmE,GAAS,CAACjE,QARK,WAChBR,GAASqH,EAAAA,GAAAA,IAAYZ,EAAEa,MAAMC,MAAK,kBAAMjC,EAASkC,GAAAA,EAAAA,WAAgB,GACnE,EAMiC9C,OAAQwC,IAGzC,OACEhH,EAAAA,EAAAA,MAAA,MAAgBC,UAAWC,EAAKC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIE,QAlCa,WACnB,OAAO8E,EAAS,GAADxD,OAAI0F,GAAAA,EAAAA,UAAc,KAAA1F,OAAI2E,EAAEa,KACzC,EAgC+BnH,UAAS,GAAA2B,OAAK1B,EAAI,KAAA0B,OAAI1B,IAAcC,UAC7DH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,UAC7BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAM6D,IAAK+C,EAAK7C,IAAK,QAASsD,QAjCnC,SAACjF,GACpBA,EAAEG,cAAcsB,IAAMgD,EACxB,OAiCQ3G,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAQC,SAAEP,UAG/BQ,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAKC,SAAEoG,EAAEU,cACxB7G,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAKC,SAAEqG,KACtBpG,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAKC,SAAEwG,KACtBvG,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAKC,SACjBoG,EAAE/E,UAAYf,GACbT,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAgBC,SAAA,CAC7B+G,GAED9G,EAAAA,EAAAA,KAACoH,GAAAA,EAAQ,CAAClH,QA1CK,WACvBR,GAASS,EAAAA,EAAAA,IAAe,aACxBqF,EAAMW,EAAEa,KACRpB,EAAQO,EAAER,MACVK,EAAaG,EAAEJ,UACjB,KAsCU/F,EAAAA,EAAAA,KAACqH,GAAAA,EAAU,CAACnH,QApCK,WACzBR,GAASS,EAAAA,EAAAA,IAAe,gBACxBqF,EAAMW,EAAEa,KACRpB,EAAQO,EAAER,KACZ,OAmCQmB,MArBGX,EAAEa,IA0Bf,MAEiB,KAAb,OAALnC,QAAK,IAALA,OAAK,EAALA,EAAOf,UAAgB9D,EAAAA,EAAAA,KAACsH,GAAAA,EAAS,KAClCtH,EAAAA,EAAAA,KAACuH,GAAAA,EAAY,CAACnC,OAAQA,EAAQF,OAAQA,EAAQsC,OAAQjC,EAAII,KAAMA,EAAMI,UAAWA,MAGvF,IC7BA,GA9DiB,WACf,IAAM0B,GAAWnH,EAAAA,EAAAA,IAAeoH,EAAAA,IAC1B7C,GAAQvE,EAAAA,EAAAA,IAAeK,EAAAA,IACvBgH,GAAarH,EAAAA,EAAAA,IAAesH,EAAAA,IAC5BrE,GAAYjD,EAAAA,EAAAA,IAAekD,EAAAA,IAC3BqE,GAAkBvH,EAAAA,EAAAA,IAAewH,EAAAA,GAEvCC,QAAQC,IAAIzE,GACZ,IAAMlC,GAAOf,EAAAA,EAAAA,IAAe8C,EAAAA,IACtB7B,GAAMjB,EAAAA,EAAAA,IAAegD,EAAAA,IACrBhC,GAAMhB,EAAAA,EAAAA,IAAe+C,EAAAA,IACrBjC,GAAUd,EAAAA,EAAAA,IAAeG,EAAAA,IACzBgD,GAAWnD,EAAAA,EAAAA,IAAeoD,EAAAA,IAC1BR,GAAW5C,EAAAA,EAAAA,IAAe6C,EAAAA,IAE1BzD,GAAWC,EAAAA,EAAAA,MAiBjB,OAPAkB,EAAAA,EAAAA,YAAU,WACH8G,GAGLjI,GAASuI,EAAAA,EAAAA,MACX,GAAG,CAAC5G,EAAMkC,EAAWjC,EAAKC,EAAKkC,EAAUrC,EAAS8B,EAAUxD,EAAUiI,KAGpE3H,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAYC,UAC1BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAUC,UACxBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAChCC,EAAAA,EAAAA,KAACX,EAAW,CAACG,MAAO,aAAcC,YAAa,kBAC/CG,EAAAA,EAAAA,MAACsI,EAAAA,EAAW,CAAAnI,SAAA,EACVC,EAAAA,EAAAA,KAACmI,EAAAA,EAAM,CAACC,aAAclF,EAAUjB,SAlBvB,SAACF,GACpBrC,GAASyB,EAAAA,EAAAA,IAAgB,CAAE+B,SAAUnB,IACvC,KAiBY/B,EAAAA,EAAAA,KAACkE,EAAI,WAITtE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCH,EAAAA,EAAAA,MAACyI,EAAAA,EAAoB,CAAAtI,SAAA,CACD,IAAjB8E,EAAMf,SAAgB9D,EAAAA,EAAAA,KAACsI,EAAAA,EAAK,CAACb,SAAUA,KACxCzH,EAAAA,EAAAA,KAAC4E,GAAS,CAACC,MAAOA,QAEpB7E,EAAAA,EAAAA,KAACuI,EAAAA,EAAe,CACdlH,KAAMA,EACNmH,WAAYX,EACZY,kBAAmBlF,EACnBtB,SApCK,SAACZ,EAAckC,GAC9B7D,GAASyB,EAAAA,EAAAA,IAAgB,CAAEE,KAAAA,EAAMkC,UAAAA,IACnC,aAyCF,C","sources":["webpack://project_cards/./src/features/packs/PackList/PackList.module.scss?78cb","webpack://project_cards/./src/features/packs/PackList/PacksHeader/PacksHeader.module.scss?ba46","features/packs/PackList/PacksHeader/PacksHeader.tsx","webpack://project_cards/./src/common/components/ButtonGroup/ButtonGroup.module.scss?6fee","common/components/ButtonGroup/ButtonGroup.tsx","webpack://project_cards/./src/common/components/Range/Range.module.scss?e98a","common/components/Range/Range.tsx","webpack://project_cards/./src/common/components/ResetSort/ResetSort.module.scss?5c7e","assets/filterRemove.svg","common/components/ResetSort/ResetSort.tsx","webpack://project_cards/./src/common/components/Sort/Sort.module.scss?a676","common/components/Sort/Sort.tsx","webpack://project_cards/./src/features/packs/PackList/TbodyPack/TbodyPack.module.scss?5e91","webpack://project_cards/./src/common/components/Icon/TeachIcon/TeachIcon.module.scss?3f54","common/components/Icon/TeachIcon/TeachIcon.tsx","features/packs/PackList/TbodyPack/TbodyPack.tsx","features/packs/PackList/PackList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PackList_container__CD613\",\"wrapper\":\"PackList_wrapper__Y-yZt\",\"innerWrapper\":\"PackList_innerWrapper__-3QkI\",\"packHeaderBlock\":\"PackList_packHeaderBlock__dp4uP\",\"packContentBlock\":\"PackList_packContentBlock__w17O1\"};","// extracted by mini-css-extract-plugin\nexport default {\"innerWrapper\":\"PacksHeader_innerWrapper__REvuv\",\"btn\":\"PacksHeader_btn__4qw0r\"};","import React, { FC, memo } from 'react'\n\nimport s from './PacksHeader.module.scss'\n\nimport { setModalStatus } from 'app/appSlice'\nimport { Button } from 'common/components/Button/Button'\nimport { useAppDispatch } from 'common/hooks'\n\ntype PacksHeaderType = {\n  title: string\n  buttonTitle: string\n}\n\nexport const PacksHeader: FC<PacksHeaderType> = memo(({ title, buttonTitle }) => {\n  const dispatch = useAppDispatch()\n\n  const openModalHandler = () => {\n    dispatch(setModalStatus('PackForm'))\n  }\n\n  return (\n    <div className={s.innerWrapper}>\n      <h2 className={s.title}>{title}</h2>\n      <Button onClick={openModalHandler} className={s.btn}>\n        {buttonTitle}\n      </Button>\n    </div>\n  )\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ButtonGroup_container__jNp-D\",\"title\":\"ButtonGroup_title__LFnmD\",\"buttonGroupe\":\"ButtonGroup_buttonGroupe__GYWXQ\",\"btn\":\"ButtonGroup_btn__8m-Xy\",\"active\":\"ButtonGroup_active__MKhf9\"};","import React, { useEffect, useState } from 'react'\n\nimport { Button } from '../Button/Button'\n\nimport s from './ButtonGroup.module.scss'\n\nimport { useAppDispatch, useAppSelector } from 'common/hooks'\nimport { authUserIdSelector } from 'features/auth/authSelectors'\nimport { packsSelector, packsUserIdSelector } from 'features/packs/packsSelectors'\nimport { setSearchParams } from 'features/packs/packsSlice'\n\nexport const ButtonGroup = () => {\n  const userId = useAppSelector(authUserIdSelector)\n  const paramId = useAppSelector(packsUserIdSelector)\n  const cardsPack = useAppSelector(packsSelector)\n  const [countPack] = cardsPack\n\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    setToggle(paramId ? 'my' : 'all')\n  }, [paramId])\n\n  const [toggle, setToggle] = useState<string | null>(paramId ? 'my' : 'all')\n\n  const showUserPacksHandler = () => {\n    setToggle('my')\n    // dispatch(resetMinMax())\n    dispatch(setSearchParams({ user_id: userId, page: 1, min: 0, max: 0 }))\n  }\n\n  const showAllPacksHandler = () => {\n    setToggle('all')\n    // dispatch(resetMinMax())\n    dispatch(setSearchParams({ user_id: undefined, page: 1, min: 0, max: 0 }))\n  }\n\n  return (\n    <div className={s.container}>\n      <h3 className={s.title}>Show packs cards</h3>\n      <div className={s.buttonGroupe}>\n        <Button\n          onClick={showUserPacksHandler}\n          className={toggle === 'my' ? `${s.btn} ${s.active}` : s.btn}\n        >\n          My\n        </Button>\n        <Button\n          onClick={showAllPacksHandler}\n          className={toggle === 'all' ? `${s.btn} ${s.active}` : s.btn}\n        >\n          All\n        </Button>\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Range_container__Besd1\",\"title\":\"Range_title__Bp89P\",\"rangeContainer\":\"Range_rangeContainer__0NZ3Y\",\"inputContainer\":\"Range_inputContainer__qgwq6\",\"input\":\"Range_input__A7F7M\",\"description\":\"Range_description__mKzzw\",\"slider\":\"Range_slider__egvM5\"};","import React, { ChangeEvent, KeyboardEvent, useEffect, useState } from 'react'\n\nimport { Slider } from '@mui/material'\n\nimport s from './Range.module.scss'\n\nimport { useAppDispatch, useAppSelector } from 'common/hooks'\nimport { packsAllSearchParametersSelector } from 'features/packs/packsSelectors'\nimport { setSearchParams } from 'features/packs/packsSlice'\n\nexport const Range = () => {\n  const dispatch = useAppDispatch()\n  const params = useAppSelector(packsAllSearchParametersSelector)\n  const { minCardsCount, maxCardsCount, min, max } = params\n\n  const [value, setValue] = useState<number[]>([min, max])\n\n  useEffect(() => {\n    setValue([minCardsCount, maxCardsCount])\n  }, [minCardsCount, maxCardsCount])\n\n  const changeMinValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const newValue: number | number[] = Number(e.currentTarget.value)\n\n    setValue([newValue, value[1]])\n  }\n\n  const changeMinValueOnPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      const newValue: number | number[] = Number(e.currentTarget.value)\n\n      setValue([newValue, value[1]])\n      dispatch(setSearchParams({ ...params, min: newValue }))\n    }\n  }\n\n  const changeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\n    const newValue: number | number[] = Number(e.currentTarget.value)\n\n    setValue([value[0], newValue])\n  }\n\n  const changeMaxValueOnPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      const newValue: number | number[] = Number(e.currentTarget.value)\n\n      setValue([value[0], newValue])\n      dispatch(setSearchParams({ ...params, max: newValue }))\n    }\n  }\n\n  const handleChange = (event: React.SyntheticEvent | Event, newValue: number | number[]) => {\n    setValue(newValue as number[])\n  }\n\n  const handleChangeCommitted = () => {\n    dispatch(setSearchParams({ ...params, min: value[0], max: value[1] }))\n  }\n\n  return (\n    <div className={s.container}>\n      <h3 className={s.title}>Number of cards</h3>\n      <div className={s.rangeContainer}>\n        <div className={s.inputContainer}>\n          <span className={s.description}>min:</span>\n          <input\n            onChange={changeMinValue}\n            onKeyDown={changeMinValueOnPressEnter}\n            value={value[0]}\n            className={s.input}\n          />\n        </div>\n        <Slider\n          sx={{ width: '200px', color: '#212121' }}\n          key={maxCardsCount + '' + minCardsCount}\n          getAriaLabel={() => 'Temperature range'}\n          value={value}\n          onChange={handleChange}\n          min={minCardsCount}\n          max={maxCardsCount}\n          valueLabelDisplay=\"auto\"\n          onChangeCommitted={handleChangeCommitted}\n        />\n        <div className={s.inputContainer}>\n          <span className={s.description}>max:</span>\n          <input\n            onChange={changeMaxValue}\n            value={value[1]}\n            className={s.input}\n            onKeyDown={changeMaxValueOnPressEnter}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResetSort_container__aB9o-\",\"title\":\"ResetSort_title__jd+V0\",\"sort\":\"ResetSort_sort__Abi2b\",\"sortIcon\":\"ResetSort_sortIcon__ueHIh\"};","var _path, _path2, _path3, _path4, _path5;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFilterRemove(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M5.33 2.76001C4.65773 2.76001 4.06 3.3103 4.06 4.13V6.45001C4.06 6.61289 4.11976 6.88228 4.25804 7.19049C4.39351 7.49245 4.57376 7.76307 4.75033 7.93964L4.76362 7.95327L8.60362 11.9933C8.61622 12.0066 8.62834 12.0203 8.63995 12.0345C8.90269 12.3549 9.1413 12.7775 9.31526 13.2131C9.48798 13.6456 9.62 14.1484 9.62 14.63V19.98C9.62 20.9693 10.755 21.5824 11.6001 21.0655L13.0033 20.1598C13.3513 19.9352 13.8155 20.0352 14.0401 20.3833C14.2648 20.7313 14.1647 21.1955 13.8167 21.4201L12.4067 22.3302L12.3944 22.3379C10.6201 23.435 8.12 22.2285 8.12 19.98V14.63C8.12 14.4016 8.05201 14.0944 7.92223 13.7694C7.79823 13.4589 7.63899 13.1851 7.49569 13.0049L3.68247 8.99307C3.35228 8.66061 3.0801 8.22943 2.88946 7.80449C2.70023 7.38272 2.56 6.89713 2.56 6.45001V4.13C2.56 2.52971 3.78226 1.26001 5.33 1.26001H18.67C20.1942 1.26001 21.44 2.50582 21.44 4.03003V6.25C21.44 6.79751 21.2721 7.36157 21.0548 7.83769C20.8365 8.31586 20.5372 8.77344 20.2103 9.10034C19.9174 9.39323 19.4426 9.39323 19.1497 9.10034C18.8568 8.80744 18.8568 8.33257 19.1497 8.03968C19.3228 7.86658 19.5285 7.56916 19.6902 7.21482C19.8529 6.85843 19.94 6.51249 19.94 6.25V4.03003C19.94 3.33423 19.3658 2.76001 18.67 2.76001H5.33Z\",\n    fill: \"#000\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16.88 10.75C14.6742 10.75 12.88 12.5442 12.88 14.75C12.88 15.5003 13.091 16.2135 13.4575 16.8049L13.4636 16.8148L13.4635 16.8148C14.1539 17.9683 15.4249 18.75 16.88 18.75C18.3376 18.75 19.6064 17.9762 20.2952 16.8169L20.3 16.8089L20.3 16.8089C20.6703 16.2031 20.88 15.4978 20.88 14.75C20.88 12.5442 19.0858 10.75 16.88 10.75ZM11.38 14.75C11.38 11.7158 13.8458 9.25 16.88 9.25C19.9142 9.25 22.38 11.7158 22.38 14.75C22.38 15.7805 22.0907 16.7538 21.5824 17.5871C20.6307 19.1856 18.8807 20.25 16.88 20.25C14.8772 20.25 13.1297 19.174 12.1794 17.5901C11.6679 16.7626 11.38 15.7777 11.38 14.75Z\",\n    fill: \"#000\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M15.1097 12.9496C15.4026 12.6568 15.8774 12.6568 16.1703 12.9497L18.6803 15.4597C18.9732 15.7526 18.9732 16.2274 18.6803 16.5203C18.3874 16.8132 17.9126 16.8132 17.6197 16.5203L15.1097 14.0103C14.8168 13.7174 14.8168 13.2425 15.1097 12.9496Z\",\n    fill: \"#000\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M18.6603 12.9797C18.9532 13.2726 18.9532 13.7474 18.6603 14.0403L16.1503 16.5503C15.8574 16.8432 15.3826 16.8432 15.0897 16.5504C14.7968 16.2575 14.7968 15.7826 15.0897 15.4897L17.5997 12.9797C17.8926 12.6868 18.3674 12.6868 18.6603 12.9797Z\",\n    fill: \"#000\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M5.33 2.75C4.65773 2.75 4.06 3.30029 4.06 4.12V6.45001C4.06 6.60419 4.12005 6.87213 4.2613 7.18567C4.3991 7.49153 4.58111 7.76699 4.75555 7.94492L4.76368 7.95321L4.76362 7.95327L8.60362 11.9933C8.61831 12.0088 8.63233 12.0248 8.64565 12.0415C8.89874 12.3578 9.13572 12.7765 9.31072 13.2111C9.48403 13.6416 9.62 14.1456 9.62 14.63V19.98C9.62 20.9693 10.755 21.5824 11.6001 21.0655L13.0033 20.1598C13.012 20.1542 13.0208 20.1488 13.0297 20.1435C13.1215 20.0895 13.2651 19.9431 13.3902 19.7014C13.4988 19.4916 13.5562 19.2817 13.5678 19.1267C13.0027 18.7096 12.5335 18.1826 12.178 17.5877C11.6695 16.7543 11.38 15.7808 11.38 14.75C11.38 11.7158 13.8458 9.25 16.88 9.25C17.1576 9.25 17.4328 9.27061 17.7019 9.3127L19.1616 8.02713C19.3344 7.84522 19.5332 7.55101 19.6899 7.20684C19.8529 6.84854 19.94 6.50245 19.94 6.23999V4.02002C19.94 3.32422 19.3658 2.75 18.67 2.75H5.33ZM2.56 4.12C2.56 2.5197 3.78226 1.25 5.33 1.25H18.67C20.1942 1.25 21.44 2.49582 21.44 4.02002V6.23999C21.44 6.78753 21.2721 7.35145 21.0551 7.82816C20.837 8.30752 20.5389 8.76523 20.2156 9.09506C20.2027 9.10814 20.1894 9.12075 20.1757 9.13285L18.4157 10.6828C18.2321 10.8446 17.9811 10.9065 17.7433 10.8489C17.4753 10.7839 17.1849 10.75 16.88 10.75C14.6742 10.75 12.88 12.5442 12.88 14.75C12.88 15.4978 13.0897 16.2031 13.46 16.8089L13.4641 16.8156L13.464 16.8157C13.7753 17.3372 14.2009 17.7773 14.7119 18.0905C14.9344 18.2269 15.07 18.4691 15.07 18.73V19.07C15.07 19.522 14.9273 19.9952 14.7223 20.3911C14.5224 20.7771 14.216 21.1805 13.8054 21.4274L12.4067 22.3302L12.3944 22.3379C10.6201 23.435 8.12 22.2285 8.12 19.98V14.63C8.12 14.4044 8.05097 14.0985 7.91928 13.7714C7.79457 13.4617 7.63489 13.1856 7.49241 13.0015L3.68009 8.99058C3.35645 8.65908 3.08503 8.22653 2.89369 7.80181C2.70495 7.38287 2.56 6.89583 2.56 6.45001V4.12Z\",\n    fill: \"#000\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilterRemove);\nexport default __webpack_public_path__ + \"static/media/filterRemove.f97cd0557cab973dc722a93f63215ef0.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\n\nimport s from './ResetSort.module.scss'\n\nimport { resetSort, setAppError } from 'app/appSlice'\nimport sort from 'assets/filterRemove.svg'\nimport { useAppDispatch, useAppSelector } from 'common/hooks'\nimport {\n  packsCountOnPageSelector,\n  packsMaxSelector,\n  packsMinSelector,\n  packsNameSelector,\n  packsPageSelector,\n  packsSortSelector,\n  packsUserIdSelector,\n} from 'features/packs/packsSelectors'\nimport { resetAll, setSearchParams } from 'features/packs/packsSlice'\n\nexport const ResetSort = () => {\n  const dispatch = useAppDispatch()\n  const userId = useAppSelector(packsUserIdSelector)\n  const packName = useAppSelector(packsNameSelector)\n  const page = useAppSelector(packsPageSelector)\n  const min = useAppSelector(packsMinSelector)\n  const max = useAppSelector(packsMaxSelector)\n  const pageCount = useAppSelector(packsCountOnPageSelector)\n  const sortPack = useAppSelector(packsSortSelector)\n  const onClick = () => {\n    if (\n      packName.length > 0 ||\n      page !== 1 ||\n      min !== 0 ||\n      max !== 0 ||\n      pageCount !== 10 ||\n      sortPack !== ''\n    ) {\n      dispatch(resetAll())\n      dispatch(resetSort())\n      dispatch(setSearchParams({ user_id: userId }))\n    } else {\n      dispatch(setAppError('Nothing to reset...'))\n    }\n  }\n\n  return (\n    <div className={s.container}>\n      <h3 className={s.title}>Reset Sort</h3>\n      <div className={s.sort}>\n        <img className={s.sortIcon} src={sort} alt=\"reset sort\" onClick={onClick} />\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Sort_container__unED+\"};","import React from 'react'\n\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup'\nimport { Range } from '../Range/Range'\nimport { ResetSort } from '../ResetSort/ResetSort'\n\nimport s from './Sort.module.scss'\n\nexport const Sort = () => {\n  return (\n    <div className={s.container}>\n      <ButtonGroup />\n      <Range />\n      <ResetSort />\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"TbodyPack_body__ij8eD\",\"tr\":\"TbodyPack_tr__hQgS4\",\"title\":\"TbodyPack_title__gJv+P\",\"td\":\"TbodyPack_td__yNILx\",\"coverContainer\":\"TbodyPack_coverContainer__lU8Wr\",\"avaContainer\":\"TbodyPack_avaContainer__TWtZS\",\"bg\":\"TbodyPack_bg__onGWe\",\"iconContainer\":\"TbodyPack_iconContainer__19QFG\",\"icon\":\"TbodyPack_icon__tSzG5\",\"disIcon\":\"TbodyPack_disIcon__N+hos\",\"packTitle\":\"TbodyPack_packTitle__g1rys\"};","// extracted by mini-css-extract-plugin\nexport default {\"cursor\":\"TeachIcon_cursor__C4N1i\"};","import React, { memo } from 'react'\n\nimport s from './TeachIcon.module.scss'\n\ntype TeachIconType = {\n  fill?: string\n  stroke?: string\n  onClick?: () => void\n}\n\nexport const TeachIcon: React.FC<TeachIconType> = memo(({ stroke, fill, onClick }) => {\n  return (\n    <svg\n      className={!stroke ? s.cursor : ''}\n      onClick={onClick}\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.7001 1.68669L2.68677 4.30669C1.4001 5.14669 1.4001 7.02669 2.68677 7.86669L6.7001 10.4867C7.4201 10.96 8.60677 10.96 9.32677 10.4867L13.3201 7.86669C14.6001 7.02669 14.6001 5.15336 13.3201 4.31336L9.32677 1.69336C8.60677 1.21336 7.4201 1.21336 6.7001 1.68669Z\"\n        stroke={stroke ? stroke : '#000'}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M3.75343 8.71997L3.74677 11.8466C3.74677 12.6933 4.4001 13.6 5.2001 13.8666L7.32677 14.5733C7.69343 14.6933 8.3001 14.6933 8.67343 14.5733L10.8001 13.8666C11.6001 13.6 12.2534 12.6933 12.2534 11.8466V8.7533\"\n        stroke={stroke ? stroke : '#000'}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M14.2668 10V6\"\n        stroke={stroke ? stroke : '#000'}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n})\n","import React, { memo, useEffect, useState, ChangeEvent } from 'react'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport s from './TbodyPack.module.scss'\n\nimport { isClosingForAnimation, modalStatus } from 'app/appSelectors'\nimport { setModalStatus } from 'app/appSlice'\nimport defaultAva from 'assets/notFound.jpg'\nimport { EmptyPack } from 'common/components/EmptyPack/EmptyPack'\nimport { DeleteIcon } from 'common/components/Icon/DeleteIcon/Delete'\nimport { EditIcon } from 'common/components/Icon/EditIcon/EditIcon'\nimport { TeachIcon } from 'common/components/Icon/TeachIcon/TeachIcon'\nimport { PATH } from 'common/constans/path'\nimport { useDebounce } from 'common/hooks'\nimport { useAppDispatch } from 'common/hooks/useAppDispatch'\nimport { useAppSelector } from 'common/hooks/useAppSelector'\nimport { dateHandler } from 'common/utils/dateHandler'\nimport { userNameHandler } from 'common/utils/userNameHandler'\nimport { authUserIdSelector } from 'features/auth/authSelectors'\nimport { fetchCardTC } from 'features/cards/cardSlice'\nimport { ModalWrapper } from 'features/MainModal/ModalWrapper'\nimport { PackType } from 'features/packs/packsType'\n\ntype TbodyType = {\n  packs?: PackType[]\n}\n\nexport const TbodyPack: React.FC<TbodyType> = memo(({ packs }) => {\n  const dispatch = useAppDispatch()\n  const isClosing = useAppSelector(isClosingForAnimation)\n  const userId = useAppSelector(authUserIdSelector)\n  const navigate = useNavigate()\n  const status = useAppSelector(modalStatus)\n  const isOpen = status !== 'idle'\n  const debounce = useDebounce(isClosing, 200)\n\n  const [id, setId] = useState('')\n  const [name, setName] = useState('')\n  const [deckCover, setDeckCover] = useState('')\n\n  useEffect(() => {\n    setId('')\n    setName('')\n    setDeckCover('')\n  }, [debounce])\n\n  return (\n    <>\n      <tbody className={s.body}>\n        {packs?.map(t => {\n          const dateUpdate = dateHandler(t.updated)\n          const userName = userNameHandler(t.user_name, 22)\n          const title = userNameHandler(t.name, 42)\n          const img = t.deckCover ? t.deckCover : defaultAva\n          const getCardsPack = () => {\n            return navigate(`${PATH.CARD_LIST}/${t._id}`)\n          }\n\n          const errorHandler = (e: ChangeEvent<HTMLImageElement>) => {\n            e.currentTarget.src = defaultAva\n          }\n\n          const editModalHandler = () => {\n            dispatch(setModalStatus('PackForm'))\n            setId(t._id)\n            setName(t.name)\n            setDeckCover(t.deckCover)\n          }\n\n          const deleteModalHandler = () => {\n            dispatch(setModalStatus('Delete pack'))\n            setId(t._id)\n            setName(t.name)\n          }\n\n          const teachPack = () => {\n            dispatch(fetchCardTC(t._id)).then(() => navigate(PATH.CARD_LEARN))\n          }\n\n          const resClass = t.cardsCount === 0 ? '#908c8c' : ''\n          const teachIcon = resClass ? (\n            <TeachIcon stroke={resClass} />\n          ) : (\n            <TeachIcon onClick={teachPack} stroke={resClass} />\n          )\n\n          return (\n            <tr key={t._id} className={s.tr}>\n              <td onClick={getCardsPack} className={`${s.td} ${s.packTitle}`}>\n                <div className={s.coverContainer}>\n                  <div className={s.avaContainer}>\n                    <img className={s.bg} src={img} alt={'cover'} onError={errorHandler} />\n                  </div>\n                  <span className={s.title}>{title}</span>\n                </div>\n              </td>\n              <td className={s.td}>{t.cardsCount}</td>\n              <td className={s.td}>{dateUpdate}</td>\n              <td className={s.td}>{userName}</td>\n              <td className={s.td}>\n                {t.user_id === userId ? (\n                  <div className={s.iconContainer}>\n                    {teachIcon}\n\n                    <EditIcon onClick={editModalHandler} />\n                    <DeleteIcon onClick={deleteModalHandler} />\n                  </div>\n                ) : (\n                  teachIcon\n                )}\n              </td>\n            </tr>\n          )\n        })}\n      </tbody>\n      {packs?.length === 0 && <EmptyPack />}\n      <ModalWrapper isOpen={isOpen} status={status} packId={id} name={name} deckCover={deckCover} />\n    </>\n  )\n})\n","import React, { useEffect } from 'react'\n\nimport {\n  packsCountOnPageSelector,\n  packsListSelector,\n  packsMaxSelector,\n  packsMinSelector,\n  packsNameSelector,\n  packsPageSelector,\n  packsSelector,\n  packsSortSelector,\n  packsTotalPageCountSelector,\n  packsUserIdSelector,\n} from '../packsSelectors'\n\nimport s from './PackList.module.scss'\nimport { PacksHeader } from './PacksHeader/PacksHeader'\n\nimport SuperPagination from 'common/components/IgnatTasksComponents/c9-SuperPagination/SuperPagination'\nimport { Search } from 'common/components/Search/Search'\nimport { SearchPanel } from 'common/components/SearchPanel/SearchPanel'\nimport { Sort } from 'common/components/Sort/Sort'\nimport { TablePackListWrapper } from 'common/components/Table/TablePackListWrapper/TablePackListWrapper'\nimport { Thead } from 'common/components/Table/Thead/Thead'\nimport { useAppDispatch, useAppSelector } from 'common/hooks'\nimport { isLoggedInSelector } from 'features/auth/authSelectors'\nimport { TbodyPack } from 'features/packs/PackList/TbodyPack/TbodyPack'\nimport { fetchPacksTC, setSearchParams } from 'features/packs/packsSlice'\n\nconst PackList = () => {\n  const packList = useAppSelector(packsListSelector)\n  const packs = useAppSelector(packsSelector)\n  const isLoggedIn = useAppSelector(isLoggedInSelector)\n  const pageCount = useAppSelector(packsCountOnPageSelector)\n  const totalPagesCount = useAppSelector(packsTotalPageCountSelector)\n\n  console.log(pageCount)\n  const page = useAppSelector(packsPageSelector)\n  const max = useAppSelector(packsMaxSelector)\n  const min = useAppSelector(packsMinSelector)\n  const user_id = useAppSelector(packsUserIdSelector)\n  const sortPack = useAppSelector(packsSortSelector)\n  const packName = useAppSelector(packsNameSelector)\n\n  const dispatch = useAppDispatch()\n\n  const onChange = (page: number, pageCount: number) => {\n    dispatch(setSearchParams({ page, pageCount }))\n  }\n\n  const searchByName = (value: string) => {\n    dispatch(setSearchParams({ packName: value }))\n  }\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return\n    }\n    dispatch(fetchPacksTC())\n  }, [page, pageCount, min, max, sortPack, user_id, packName, dispatch, isLoggedIn])\n\n  return (\n    <div className={s.container}>\n      <div className={s.wrapper}>\n        <div className={s.innerWrapper}>\n          <div className={s.packHeaderBlock}>\n            <PacksHeader title={'Packs list'} buttonTitle={'Add new pack'} />\n            <SearchPanel>\n              <Search initialValue={packName} onChange={searchByName} />\n              <Sort />\n            </SearchPanel>\n          </div>\n\n          <div className={s.packContentBlock}>\n            <TablePackListWrapper>\n              {packs.length !== 0 && <Thead packList={packList} />}\n              <TbodyPack packs={packs} />\n            </TablePackListWrapper>\n            <SuperPagination\n              page={page}\n              totalCount={totalPagesCount}\n              itemsCountForPage={pageCount}\n              onChange={onChange}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PackList\n"],"names":["PacksHeader","memo","_ref","title","buttonTitle","dispatch","useAppDispatch","_jsxs","className","s","children","_jsx","Button","onClick","setModalStatus","ButtonGroup","userId","useAppSelector","authUserIdSelector","paramId","packsUserIdSelector","cardsPack","packsSelector","_slicedToArray","useEffect","setToggle","_useState","useState","_useState2","toggle","setSearchParams","user_id","page","min","max","concat","undefined","Range","params","packsAllSearchParametersSelector","minCardsCount","maxCardsCount","value","setValue","onChange","e","newValue","Number","currentTarget","onKeyDown","key","_objectSpread","Slider","sx","width","color","getAriaLabel","event","valueLabelDisplay","onChangeCommitted","ResetSort","packName","packsNameSelector","packsPageSelector","packsMinSelector","packsMaxSelector","pageCount","packsCountOnPageSelector","sortPack","packsSortSelector","src","sort","alt","length","resetAll","resetSort","setAppError","Sort","TeachIcon","stroke","fill","height","viewBox","xmlns","d","strokeLinecap","strokeLinejoin","TbodyPack","packs","isClosing","isClosingForAnimation","navigate","useNavigate","status","modalStatus","isOpen","debounce","useDebounce","id","setId","_useState3","_useState4","name","setName","_useState5","_useState6","deckCover","setDeckCover","_Fragment","map","t","dateUpdate","dateHandler","updated","userName","userNameHandler","user_name","img","defaultAva","resClass","cardsCount","teachIcon","fetchCardTC","_id","then","PATH","onError","EditIcon","DeleteIcon","EmptyPack","ModalWrapper","packId","packList","packsListSelector","isLoggedIn","isLoggedInSelector","totalPagesCount","packsTotalPageCountSelector","console","log","fetchPacksTC","SearchPanel","Search","initialValue","TablePackListWrapper","Thead","SuperPagination","totalCount","itemsCountForPage"],"sourceRoot":""}